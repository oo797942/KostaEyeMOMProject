<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
 
<mapper namespace="admin">

<!-- 게임등록 sql -->
<insert id="gameInput" parameterType="gameVO"> <!-- insert,delete,update는 리턴타입 필요없음 -->
INSERT INTO kid_game(g_no, g_title, g_content, g_photo, g_flash) VALUES (MOM_GAME_NO.nextval, #{g_title}, #{g_content}, #{g_photo}, #{g_flash})
</insert>
<!-- 춤을 춰요 영상등록 sql -->
<insert id="videoInput" parameterType="videoVO"> <!-- insert,delete,update는 리턴타입 필요없음 -->
INSERT INTO kid_video(d_no, d_title, d_content, d_photo, d_video) VALUES (MOM_VIDEO_NO.nextval, #{d_title}, #{d_content}, #{d_photo}, #{d_video})
</insert>

<!-- 공부 해요 영상등록 sql -->
<insert id="studyInput" parameterType="studyVO"> <!-- insert,delete,update는 리턴타입 필요없음 -->
INSERT INTO kid_study(v_no, v_title, v_content, v_photo, v_video) VALUES (MOM_VIDEO_NO.nextval, #{v_title}, #{v_content}, #{v_photo}, #{v_video})
</insert>
<!-- userId 같은 이름들은 parameterClass의 클래스 필드 명 -->
 
 <select id="gameAll" resultType="gameVO"  parameterType="gameVO" > 
	select * from kid_game
	<where>
		<if test="g_no != null">
		g_no=#{g_no}
	</if>	
	</where>
</select>

<!-- 춤을 춰요 디비값 가져오기 -->
 <select id="videoAll" resultType="videoVO"  parameterType="videoVO" > 
	select * from kid_video
	<where>
		<if test="d_no != null">
		d_no=#{d_no}
	</if>	
	</where>
</select>


<!-- 공부 해요 디비값 가져오기 -->
 <select id="studyAll" resultType="studyVO"  parameterType="studyVO" > 
	select * from kid_study
	<where>
		<if test="v_no != null">
		v_no=#{v_no}
	</if>	
	</where>
</select>

<update id="gameCount" parameterType="gameVO">
UPDATE kid_game SET g_count = g_count+1 WHERE g_no = #{g_no}
</update>

<update id="gameUpdate" parameterType="gameVO">
UPDATE kid_game SET 
g_title = #{g_title}, 
g_content = #{g_content}
<if test="g_photo neq null">
, g_photo = #{g_photo}
</if>
<if test="g_flash neq null">
, g_flash = #{g_flash}
</if>
WHERE g_no = #{g_no}
</update>


<update id="studyCount" parameterType="studyVO">
UPDATE kid_study SET v_count = v_count+1 WHERE v_no = #{v_no}
</update>

<update id="videoCount" parameterType="videoVO">
UPDATE kid_video SET d_count = d_count+1 WHERE d_no = #{d_no}
</update>

<delete id="gameDelete" parameterType="gameVO">
DELETE FROM kid_game WHERE g_no = #{g_no}
</delete>

<delete id="videoDelete" parameterType="videoVO">
DELETE FROM kid_video WHERE d_no = #{d_no}
</delete>

<delete id="studyDelete" parameterType="studyVO">
DELETE FROM kid_study WHERE v_no = #{v_no}
</delete>

<update id="videoUpdate" parameterType="videoVO">
UPDATE kid_video SET 
d_title = #{d_title}, 
d_content = #{d_content}
<if test="d_photo neq null">
, d_photo = #{d_photo}
</if>
<if test="d_video neq null">
, d_video = #{d_video}
</if>
WHERE d_no = #{d_no}
</update>

<update id="studyUpdate" parameterType="studyVO">
UPDATE kid_study SET 
v_title = #{v_title}, 
v_content = #{v_content}
<if test="v_photo neq null">
, v_photo = #{v_photo}
</if>
<if test="v_video neq null">
, v_video = #{v_video}
</if>
WHERE v_no = #{v_no}
</update>

<select id="gameRecom" parameterType="gameVO" resultType="gameVO">
<![CDATA[
    SELECT distinct regexp_substr(b.g_goodog, '[^/]+', 1, LEVEL) g_goodog
   FROM (SELECT g_goodog FROM kid_game WHERE g_no = #{g_no}) b
CONNECT BY LEVEL <= length(regexp_replace(b.g_goodog, '[^/]+',''))+1
]]>
</select>

<update id="gameRecomDoing" parameterType="gameVO">
UPDATE kid_game SET g_good = (g_good+1),  g_goodog = (g_goodog||'/'||#{g_recomId})
</update>

<select id="videoRecom" parameterType="videoVO" resultType="videoVO">
<![CDATA[
 SELECT distinct regexp_substr(b.d_goodog, '[^/]+', 1, LEVEL) d_goodog
   FROM (SELECT d_goodog FROM kid_video WHERE d_no = #{d_no}) b
CONNECT BY LEVEL <= length(regexp_replace(b.d_goodog, '[^/]+',''))+1
]]>
</select>

<update id="videoRecomDoing" parameterType="videoVO">
UPDATE kid_video SET d_good = (d_good+1),  d_goodog = (d_goodog||'/'||#{d_recomId})
</update>

<select id="studyRecom" parameterType="studyVO" resultType="studyVO">
<![CDATA[
    SELECT distinct regexp_substr(b.v_goodog, '[^/]+', 1, LEVEL) v_goodog
   FROM (SELECT v_goodog FROM kid_study WHERE v_no = #{v_no}) b
CONNECT BY LEVEL <= length(regexp_replace(b.v_goodog, '[^/]+',''))+1
]]>
</select>

<update id="studyRecomDoing" parameterType="studyVO">
UPDATE kid_study SET v_good = (v_good+1),  v_goodog = (v_goodog||'/'||#{v_recomId})
</update>


</mapper> 